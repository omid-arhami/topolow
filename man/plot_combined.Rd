% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/visualization.R
\name{plot_combined}
\alias{plot_combined}
\title{Create Combined Visualization}
\usage{
plot_combined(
  df_coords,
  ndim,
  plot_types = c("temporal", "cluster"),
  dim_config = new_dim_reduction_config(),
  aesthetic_config = new_aesthetic_config(),
  layout_config = new_layout_config(),
  arrange = "grid",
  output_dir = NULL
)
}
\arguments{
\item{df_coords}{Data frame containing:
- V1, V2, ... Vn: Coordinate columns
- antigen: Binary indicator for antigen points
- antiserum: Binary indicator for antiserum points
- cluster: (Optional) Factor or integer cluster assignments
- year: (Optional) Numeric year values for temporal coloring}

\item{ndim}{Number of dimensions in input coordinates}

\item{plot_types}{Vector of plot types to create ("temporal", "cluster", "3d")}

\item{dim_config}{Dimension reduction configuration object}

\item{aesthetic_config}{Aesthetic configuration object}

\item{layout_config}{Layout configuration object}

\item{arrange}{How to arrange multiple plots ("grid", "vertical", "horizontal")}

\item{output_dir}{Character. Directory for output files. If NULL, uses current directory}
}
\value{
Combined plot object (grid arrangement of plots)
}
\description{
Creates multiple coordinated visualizations of the same data using different
methods and arrangements. Supports combining temporal, cluster, and 3D
visualizations in flexible layouts.
}
\details{
This function provides a high-level interface for creating multiple coordinated
views of the same data. It supports:

Plot Types:
\itemize{
\item temporal: Time-based color gradients
\item cluster: Cluster-based discrete colors
\item 3d: Three-dimensional interactive or static views
}

Arrangement Options:
\itemize{
\item grid: Automatic square-like arrangement
\item vertical: Plots stacked vertically
\item horizontal: Plots arranged horizontally
}

All plots share consistent:
\itemize{
\item Color schemes
\item Point styles
\item Axis scales
\item Theme elements
}
}
\examples{
\dontrun{
# Create sample data
set.seed(123)
data <- data.frame(
  V1 = rnorm(100),
  V2 = rnorm(100),
  V3 = rnorm(100),
  V4 = rnorm(100),
  antigen = rep(c(0,1), 50),
  antiserum = rep(c(1,0), 50),
  cluster = rep(1:5, each=20),
  year = rep(2000:2009, each=10)
)

# Basic combined plot
p1 <- plot_combined(data, ndim=4,
  plot_types = c("temporal", "cluster")
)

# Advanced configuration
dim_config <- new_dim_reduction_config(
  method = "umap",
  n_components = 2,
  scale = TRUE,
  umap_params = list(
    n_neighbors = 15,
    min_dist = 0.1
  )
)

aesthetic_config <- new_aesthetic_config(
  point_size = 3,
  point_alpha = 0.7,
  point_shapes = c(antigen = 17, antiserum = 1),
  gradient_colors = list(
    low = "navy",
    high = "red"
  ),
  show_labels = TRUE,
  label_size = 3
)

layout_config <- new_layout_config(
  width = 12,
  height = 8,
  aspect_ratio = 1,
  show_grid = TRUE,
  grid_type = "major",
  background_color = "white",
  panel_border = TRUE
)

# Create comprehensive visualization
p2 <- plot_combined(data, ndim=4,
  plot_types = c("temporal", "cluster", "3d"),
  dim_config = dim_config,
  aesthetic_config = aesthetic_config,
  layout_config = layout_config,
  arrange = "grid"
)

# Save combined plot
save_plot(p2, "combined_visualization.pdf")

# Create interactive versions
p3 <- plot_combined(data, ndim=4,
  plot_types = c("temporal", "cluster"),
  arrange = "horizontal"
)

p3_interactive <- make_interactive(p3,
  tooltip_vars = c("year", "cluster", "antigen")
)

# Example with different layouts
# Vertical arrangement
p4 <- plot_combined(data, ndim=4,
  plot_types = c("temporal", "cluster", "3d"),
  arrange = "vertical"
)

# Horizontal arrangement with temporal and cluster only
p5 <- plot_combined(data, ndim=4,
  plot_types = c("temporal", "cluster"),
  arrange = "horizontal"
)

# Grid arrangement with custom layout
layout_config$width <- 15
layout_config$height <- 15
p6 <- plot_combined(data, ndim=4,
  plot_types = c("temporal", "cluster", "3d"),
  layout_config = layout_config,
  arrange = "grid"
)

# Example workflow for publication-quality figures
# 1. Create base visualization
p7 <- plot_combined(data, ndim=4,
  plot_types = c("temporal", "cluster")
)

# 2. Customize for publication
layout_config <- new_layout_config(
  width = 8,
  height = 6,
  dpi = 600,
  save_format = "pdf",
  background_color = "white",
  panel_border = TRUE,
  grid_type = "major"
)

# 3. Save high-resolution version
save_plot(p7, "publication_figure.pdf", layout_config)
}

}
\seealso{
\code{\link{plot_temporal_mapping}} for individual temporal plots
\code{\link{plot_cluster_mapping}} for individual cluster plots
\code{\link{plot_3d_mapping}} for individual 3D plots
\code{\link{make_interactive}} for creating interactive versions
\code{\link{save_plot}} for saving plots to files
}
