% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{check_matrix_connectivity}
\alias{check_matrix_connectivity}
\title{Check Dissimilarity Matrix Connectivity}
\usage{
check_matrix_connectivity(dissimilarity_matrix, min_completeness = 0.1)
}
\arguments{
\item{dissimilarity_matrix}{Square symmetric matrix of dissimilarities.
Can contain NA values for missing measurements.}

\item{min_completeness}{Numeric. Minimum network completeness (fraction of
possible edges that are observed) to consider acceptable. Default: 0.10.
This is used as a warning threshold, not a hard requirement.}
}
\value{
A list containing connectivity diagnostics:
\item{is_connected}{Logical. TRUE if the graph forms a single connected component.}
\item{n_components}{Integer. Number of separate connected components (islands).}
\item{completeness}{Numeric. Fraction of possible edges that are observed (0-1).}
\item{n_points}{Integer. Number of points in the matrix.}
\item{n_measurements}{Integer. Number of observed dissimilarities.}
}
\description{
Checks whether a dissimilarity matrix forms a connected graph, meaning all
points can be reached from any other point through a path of observed
dissimilarities. This is critical for ensuring that subsampled data will
allow proper embedding optimization.
}
\details{
A connected graph means there are no isolated groups of points. If the graph
has multiple components (islands), optimization will fail because points in
different islands have no observed relationships to constrain their relative
positions.

The function uses \code{\link{analyze_network_structure}} to build an
adjacency matrix, then uses igraph to identify connected components.
}
\examples{
# Create a connected matrix
connected_mat <- matrix(c(0, 1, 2, 1, 0, 1.5, 2, 1.5, 0), nrow = 3)
result <- check_matrix_connectivity(connected_mat)
print(result$is_connected)  # TRUE

# Create a disconnected matrix (two islands)
disconnected_mat <- matrix(NA, nrow = 4, ncol = 4)
diag(disconnected_mat) <- 0
disconnected_mat[1, 2] <- disconnected_mat[2, 1] <- 1
disconnected_mat[3, 4] <- disconnected_mat[4, 3] <- 1
result <- check_matrix_connectivity(disconnected_mat)
print(result$is_connected)  # FALSE
print(result$n_components)  # 2

}
